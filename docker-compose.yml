version: "3"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  web:
    build: .
    command: >
      bash -c "
      sleep 10 &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py create_rate_plans &&
      python manage.py collectstatic --noinput &&
      gunicorn hynfratech_assessment.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - /app/static
    ports:
      - "8000:8000"
    environment:
      - DATABASE=${DATABASE}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=db
      - PORT=5432
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network
    restart: always

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - /app/static:/static
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
  #   depends_on:
  #     - web
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
