name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # This allows manual triggering of the workflow

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U $POSTGRES_USER" --health-interval 10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Pass secrets as environment variables
      - name: Set environment variables
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}" >> $GITHUB_ENV

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h postgres -p 5432 -U ${{ secrets.POSTGRES_USER }} && break || sleep 5
          done

      - name: Run tests
        run: |
          python manage.py makemigrations
          python manage.py migrate
          python manage.py test

      - name: Build Docker image
        run: |
          docker build -t botontapwater/hynfratech-assessment:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push botontapwater/hynfratech-assessment:latest

  deploy:
    name: Setup Passwordless Sudo on VPS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Configure passwordless sudo and run commands
        run: |
          ssh -o StrictHostKeyChecking=no -p 2112 lab@102.209.68.78 << EOF
            echo "lab ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/lab
            
            # Clone the repo if it doesn't exist, otherwise pull the latest changes
            if [ ! -d "/home/lab/hynfratech_assessment" ]; then
              git clone https://github.com/Bot-on-Tapwater/hynfratech_assessment.git /home/lab/hynfratech_assessment
            else
              cd /home/lab/hynfratech_assessment && git pull
            fi

            # Navigate to the repo
            cd /home/lab/hynfratech_assessment
          EOF

      # Create and send the .env file to the server
      - name: Upload .env file to remote server
        run: |
          echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env
          scp -P 2112 .env lab@102.209.68.78:/home/lab/hynfratech_assessment/.env

      - name: Run docker-compose on the server
        run: |
          ssh -o StrictHostKeyChecking=no -p 2112 lab@102.209.68.78 << EOF
            cd /home/lab/hynfratech_assessment
            sudo docker-compose up -d
            sudo docker-compose restart web
          EOF
